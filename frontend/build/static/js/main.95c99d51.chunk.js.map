{"version":3,"sources":["components/cards/Card.tsx","utils/covidApi.ts","components/cards/HeaderCards.tsx","components/models/timeline.tsx","components/Timeline/Timeline.tsx","components/charts/StateChart.tsx","components/charts/StateTestChart.tsx","components/models/stateAbbreviations.ts","components/charts/StateChartWrapper.tsx","components/charts/BasicChart.tsx","components/charts/CountryChartWrapper.tsx","App.tsx","index.tsx","components/Timeline/Timeline.module.css"],"names":["useStyles","makeStyles","theme","root","display","flexWrap","margin","spacing","width","height","alignItems","justifyContent","Card","props","classes","Box","className","Paper","elevation","flexDirection","pb","title","textAlign","value","baseUrl","byCountryTotalAllStatus","a","axios","get","countrySummary","HeaderCards","useState","setValue","useMount","result","data","Countries","find","d","Slug","Typography","variant","Country","format","Date","TotalDeaths","TotalConfirmed","TotalRecovered","timeline","getTime","Timeline","align","Object","entries","map","key","Item","styles","container","p","datetime","ReactHtmlParser","highChartOptions","Highcharts","getOptions","color","Array","isArray","colors","options","chart","zoomType","xAxis","type","yAxis","text","legend","enabled","plotOptions","area","fillColor","linearGradient","x1","y1","x2","y2","stops","setOpacity","marker","radius","lineWidth","states","hover","threshold","tooltip","pointFormat","series","name","StateChart","useStateStats","chartOptions","setChartOptions","useEffect","newOptions","state","filtered","filter","s","sort","b","deathData","f","death","increaseInDeathData","deathIncrease","hospitializedData","hospitalizedCurrently","onVentilatorsData","onVentilatorCurrently","inIcuCurrentlyData","inIcuCurrently","console","log","highcharts","StateTestChart","totalTestResults","totalNegativeTestResultsData","negative","totalPositiveTestResultsData","positive","stateAbbreviations","AL","AK","AS","AZ","AR","CA","CO","CT","DE","DC","FM","FL","GA","GU","HI","ID","IL","IN","IA","KS","KY","LA","ME","MH","MD","MA","MI","MN","MS","MO","MT","NE","NV","NH","NJ","NM","NY","NC","ND","MP","OH","OK","OR","PW","PA","PR","RI","SC","SD","TN","TX","UT","VT","VI","VA","WA","WV","WI","WY","createGlobalState","StateChartWrapper","setStateStats","stateData","dateStr","date","toString","newDate","slice","length","toDateString","pr","Grid","keys","item","xs","sm","AnnotationsModule","min","annotations","labels","BasicChart","useCountryStats","fetchData","Deaths","point","deaths","label","x","y","push","CountryChartWrapper","App","window","innerHeight","innerWidth","dimensions","setDimensions","chartContainer","useRef","debouncedHandleResize","fn","ms","timer","_","clearTimeout","setTimeout","apply","arguments","debounce","addEventListener","removeEventListener","overflow","id","ref","flexGrow","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.95c99d51.chunk.js","sourcesContent":["import React from \"react\";\nimport { Box, Paper, makeStyles } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    \"& > *\": {\n      margin: theme.spacing(1),\n      width: theme.spacing(16),\n      height: theme.spacing(16),\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n    },\n  },\n}));\n\nexport const Card = (props: any) => {\n  const classes = useStyles();\n\n  return (\n    <Box className={classes.root}>\n      <Paper elevation={3}>\n        <Box display=\"flex\" flexDirection=\"column\">\n          <Box pb={5}>{props.title}</Box>\n          <Box textAlign=\"center\">{props.value}</Box>\n        </Box>\n      </Paper>\n    </Box>\n  );\n};\n","import axios from \"axios\";\n\nconst baseUrl: string = \"https://api.covid19api.com\";\n\n// {{baseUrl}}/total/country/{{country}}/status/{{status}}?from=2020-03-01T00:00:00Z&to=2020-04-01T00:00:00Z\nexport const byCountryTotal = async () => {\n  return await axios.get(\n    `${baseUrl}/total/country/united-states/status/confirmed?from=2020-01-01T00:00:00Z&to=${new Date().toISOString()}`\n  );\n};\n\nexport const byCountryTotalAllStatus = async () => {\n  return await axios.get(`${baseUrl}/total/country/united-states`);\n};\n\nexport const countrySummary = async () => {\n  return await axios.get(`${baseUrl}/summary`);\n};\n\nexport const getAllStatesByTime = async () => {\n  return await axios.get(\n    `${baseUrl}/live/country/united-states/status/confirmed/date/2020-03-21T13:13:30Z`\n  );\n};\n","import React, { useState } from \"react\";\nimport { Box, Typography } from \"@material-ui/core\";\nimport { useMount } from \"react-use\";\nimport { format } from \"date-fns\";\nimport { Card } from \"./Card\";\nimport { countrySummary } from \"../../utils/covidApi\";\n\ninterface Summary {\n  Country: string;\n  CountryCode: string;\n  Slug: string;\n  NewConfirmed: number;\n  TotalConfirmed: number;\n  NewDeaths: number;\n  TotalDeaths: number;\n  NewRecovered: number;\n  TotalRecovered: number;\n  Date: string;\n}\n\nexport const HeaderCards = (props: any) => {\n  const [value, setValue] = useState<Summary>();\n  useMount(async () => {\n    const result = await countrySummary();\n\n    setValue(\n      result.data.Countries.find((d: Summary) => d.Slug === \"united-states\")\n    );\n  });\n\n  return (\n    <Box display=\"flex\" justifyContent=\"center\" flexDirection=\"column\">\n      <Box\n        display=\"flex\"\n        justifyContent=\"center\"\n        flexDirection=\"column\"\n        alignItems=\"center\"\n        pb={2}\n      >\n        <Box>\n          <Typography variant=\"h4\">\n            {value?.Country} <br />\n          </Typography>\n        </Box>\n        <Box>\n          <Typography variant=\"h6\">\n            {value && format(new Date(value?.Date), \"MM/dd/yyyy\")}\n          </Typography>\n        </Box>\n      </Box>\n      <Box display=\"flex\" justifyContent=\"center\" flexDirection=\"row\">\n        <Card title=\"Deaths\" value={value?.TotalDeaths} />\n        <Card title=\"Confirmed\" value={value?.TotalConfirmed} />\n        <Card title=\"Recovered\" value={value?.TotalRecovered} />\n      </Box>\n    </Box>\n  );\n};\n","export const timeline = {\n  [new Date(\"2020-01-05T00:00:00Z\").getTime()]: \"WHO reports virus\",\n  [new Date(\"2020-01-09T00:00:00Z\").getTime()]: \"CDC - Issues alert\",\n  [new Date(\n    \"2020-01-15T00:00:00Z\"\n  ).getTime()]: \"WHO <br> signals Human to Human transmission\",\n  [new Date(\n    \"2020-01-19T00:00:00Z\"\n  ).getTime()]: `Trump briefed. \"Trump spent much of the conversation <br> wanting to talk about vaping\".`,\n  [new Date(\"2020-01-22T00:00:00Z\").getTime()]: \"First case.\",\n  [new Date(\n    \"2020-01-23T00:00:00Z\"\n  ).getTime()]: \"Trump <br> We have it totally under control, <br> One person from China.\",\n  [new Date(\n    \"2020-01-25T00:00:00Z\"\n  ).getTime()]: \"Trump praises China <br>for containing coronavirus.\",\n  [new Date(\"2020-01-28T00:00:00Z\").getTime()]: \"Whitehouse aide raises alarm\",\n  [new Date(\n    \"2020-01-29T00:00:00Z\"\n  ).getTime()]: \"WHO raises the global risk<br>from high to very high\",\n\n  [new Date(\n    \"2020-01-30T00:00:00Z\"\n  ).getTime()]: \"Aide warns of ‘full-blown Covid-19 pandemic'\",\n  [new Date(\n    \"2020-01-31T00:00:00Z\"\n  ).getTime()]: \"Trump <br> We only have five people. <br>Hopefully, everything's going to be great. <br> Azar warns Trump again\",\n  [new Date(\n    \"2020-02-01T00:00:00Z\"\n  ).getTime()]: \"US declares 'public health emergency'\",\n  [new Date(\n    \"2020-02-03T00:00:00Z\"\n  ).getTime()]: \"Trump <br> We pretty much shut <br> it down coming in from China.\",\n  [new Date(\n    \"2020-02-06T00:00:00Z\"\n  ).getTime()]: \"They are not taking this seriously\",\n  [new Date(\n    \"2020-02-11T00:00:00Z\"\n  ).getTime()]: \"Trump <br> Looks like by April, <br> when it gets a little warmer, <br>it miraculously goes away.\",\n  [new Date(\n    \"2020-02-14T00:00:00Z\"\n  ).getTime()]: \"Trump <br> In our country, we only have, <br> 12 cases, and most of those people are recovering <br> and some cases fully recovered. <br> So it's actually less..\",\n  [new Date(\n    \"2020-02-22T00:00:00Z\"\n  ).getTime()]: \"Taskforce concludes social distancing needed. \",\n  [new Date(\n    \"2020-02-24T00:00:00Z\"\n  ).getTime()]: \"Aide warns full-blown pandemic. \",\n  [new Date(\n    \"2020-02-25T00:00:00Z\"\n  ).getTime()]: \"Stock market tumbles, <br>Trump <br> When you have 15 people, <br> and the 15 within a couple of days <br>is going to be down to close to zero, <br>that's a pretty good job we've done.\",\n  [new Date(\n    \"2020-02-26T00:00:00Z\"\n  ).getTime()]: \"Messonnier, expect to see community spread\",\n  [new Date(\n    \"2020-02-27T00:00:00Z\"\n  ).getTime()]: \"Trump <br> Media making Coronavirus look bad\",\n  [new Date(\"2020-02-29T00:00:00Z\").getTime()]: \"Trump <br> It will disappear\",\n  [new Date(\"2020-02-29T00:00:00Z\").getTime()]: \"First death\",\n  [new Date(\n    \"2020-03-06T00:00:00Z\"\n  ).getTime()]: \"Trump <br>It's going to all work out. Everybody has to be calm. <br>It's all going to work out.\",\n  [new Date(\n    \"2020-03-06T00:00:00Z\"\n  ).getTime()]: \"Trump <br>Compares to the flu.\",\n  [new Date(\n    \"2020-03-10T00:00:00Z\"\n  ).getTime()]: \"Trump <br>Will perform 4m tests per week.\",\n  [new Date(\n    \"2020-03-11T00:00:00Z\"\n  ).getTime()]: \"Trump <br>When people need a test they can get a test.\",\n  [new Date(\n    \"2020-03-12T00:00:00Z\"\n  ).getTime()]: \"Trump <br>This was unexpected, <br> and we're doing a great job with it. <br> And it will go away.\",\n  [new Date(\n    \"2020-03-12T00:00:00Z\"\n  ).getTime()]: \"WHO COVID-19 officially a pandemic.\",\n  [new Date(\n    \"2020-03-14T00:00:00Z\"\n  ).getTime()]: \"Trump <br> I don't take responsibility at all.\",\n  [new Date(\n    \"2020-03-18T00:00:00Z\"\n  ).getTime()]: \"Trump <br>This is a pandemic. <br> I felt it was a pandemic long before <br> it was called a pandemic.\",\n  [new Date(\n    \"2020-03-22T00:00:00Z\"\n  ).getTime()]: \"Trump <br>tweets about HYDROXYCHLOROQUINE.\",\n  [new Date(\n    \"2020-03-24T00:00:00Z\"\n  ).getTime()]: \"WHO <br>pandemic is accelerating.\",\n  [new Date(\n    \"2020-03-25T00:00:00Z\"\n  ).getTime()]: \"Trump <br>We'll open by Easter.\",\n  [new Date(\n    \"2020-04-08T00:00:00Z\"\n  ).getTime()]: \"Trump <br>could be 55,000 to 75,000 deaths.\",\n  [new Date(\n    \"2020-04-11T00:00:00Z\"\n  ).getTime()]: \"Trump <br>Criticizes WHO, <br>'They really blew it'.\",\n  [new Date(\n    \"2020-04-15T00:00:00Z\"\n  ).getTime()]: \"Trump <br>Criticizes WHO, <br>halts funding.\",\n  [new Date(\n    \"2020-04-18T00:00:00Z\"\n  ).getTime()]: \"Trump <br>could be 60,000 to 65,000 deaths.\",\n  [new Date(\n    \"2020-04-21T00:00:00Z\"\n  ).getTime()]: \"Trump <br>could be 50,000 to 60,000 deaths.\",\n  [new Date(\n    \"2020-04-28T00:00:00Z\"\n  ).getTime()]: \"Trump <br>could be 60,000 to 70,000 deaths.\",\n  [new Date(\n    \"2020-04-30T00:00:00Z\"\n  ).getTime()]: \"Trump <br>could be 60,000, 65,000, 70,000 deaths.\",\n  [new Date(\n    \"2020-05-02T00:00:00Z\"\n  ).getTime()]: \"Trump <br>hopefully finish under 100,000\",\n  [new Date(\n    \"2020-05-04T00:00:00Z\"\n  ).getTime()]: \"Trump <br>could be 75,000 to 100,000 deaths.\",\n};\n","/* eslint-disable @typescript-eslint/no-unused-expressions */\nimport React from \"react\";\nimport { Box } from \"@material-ui/core\";\nimport { format } from \"date-fns\";\nimport ReactHtmlParser from \"react-html-parser\";\nimport { Timeline as RsuiteTimeline } from \"rsuite\";\nimport { timeline } from \"../models/timeline\";\nimport styles from \"./Timeline.module.css\";\n\nexport const Timeline = (props: any) => {\n  return (\n    <RsuiteTimeline align={props.align}>\n      {Object.entries(timeline).map(([key, value]) => {\n        return (\n          <RsuiteTimeline.Item>\n            <Box className={styles.container} p={0.5}>\n              <Box className={styles.datetime} pb={0.5}>\n                {format(new Date(+key), \"MM/dd/yyyy\")}\n              </Box>\n              <Box className={styles.value}>{ReactHtmlParser(value)}</Box>\n            </Box>\n          </RsuiteTimeline.Item>\n        );\n      })}\n    </RsuiteTimeline>\n  );\n};\n","import React, { useEffect, useState } from \"react\";\nimport Highcharts from \"highcharts\";\nimport HighchartsReact from \"highcharts-react-official\";\nimport { useStateStats } from \"./StateChartWrapper\";\n\nconst highChartOptions = Highcharts.getOptions();\nconst color =\n  highChartOptions && Array.isArray(highChartOptions.colors)\n    ? highChartOptions.colors[0]\n    : \"rgb(255, 255, 255)\";\n\nconst options = {\n  chart: {\n    zoomType: \"x\",\n  },\n  xAxis: {\n    type: \"datetime\",\n  },\n  yAxis: {\n    title: {\n      text: \"Deaths and Hospitalization\",\n    },\n  },\n  legend: {\n    enabled: false,\n  },\n  plotOptions: {\n    area: {\n      fillColor: {\n        linearGradient: {\n          x1: 0,\n          y1: 0,\n          x2: 0,\n          y2: 1,\n        },\n        stops: [\n          [0, color],\n          [1, Highcharts.color(color).setOpacity(0).get(\"rgba\")],\n        ],\n      },\n      marker: {\n        radius: 2,\n      },\n      lineWidth: 1,\n      states: {\n        hover: {\n          lineWidth: 1,\n        },\n      },\n      threshold: null,\n    },\n  },\n  tooltip: {\n    pointFormat: \"{series.name}: <b>{point.y:,.0f}</b>\",\n  },\n  series: [\n    {\n      name: \"deaths\",\n      type: \"area\",\n      data: [] as any,\n    },\n  ],\n};\n\nexport const StateChart = (props: { state: string }) => {\n  const [states] = useStateStats();\n  const [chartOptions, setChartOptions] = useState(options);\n\n  useEffect(() => {\n    if (states) {\n      const newOptions = { ...chartOptions, title: { text: props.state } };\n\n      let filtered = states\n        .filter((s) => s.state === props.state)\n        .sort((a, b) => a.datetime - b.datetime);\n      let deathData = filtered.map((f) => {\n        return [f.datetime, f.death];\n      });\n\n      let increaseInDeathData = filtered.map((f) => {\n        return [f.datetime, f.deathIncrease];\n      });\n\n      let hospitializedData = filtered.map((f) => {\n        return [f.datetime, f.hospitalizedCurrently || 0];\n      });\n\n      let onVentilatorsData = filtered.map((f) => {\n        return [f.datetime, f.onVentilatorCurrently || 0];\n      });\n\n      let inIcuCurrentlyData = filtered.map((f) => {\n        return [f.datetime, f.inIcuCurrently || 0];\n      });\n\n      newOptions.series = [\n        {\n          name: \"Deaths\",\n          type: \"area\",\n          data: deathData,\n        },\n        {\n          name: \"Increase in Death\",\n          type: \"area\",\n          data: increaseInDeathData,\n        },\n        {\n          name: \"Hospitialized\",\n          type: \"area\",\n          data: hospitializedData,\n        },\n        {\n          name: \"On Ventilator\",\n          type: \"area\",\n          data: onVentilatorsData,\n        },\n        {\n          name: \"In ICU\",\n          type: \"area\",\n          data: inIcuCurrentlyData,\n        },\n      ];\n\n      if (props.state === \"KS\") {\n        console.log(filtered);\n      }\n\n      // let unemploymentStateData = data.find(\n      //   (unemployment) => unemployment.state === props.state\n      // );\n\n      // if (unemploymentStateData) {\n      //   Object.entries(stateData).map(([k, v]) => {\n      //     let time = k[0];\n      //     let blah = unemploymentStateData.data.find(\n      //       (datum) => datum.datetime === time\n      //     );\n      //   });\n      //}\n\n      setChartOptions(newOptions);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [states]);\n\n  return <HighchartsReact highcharts={Highcharts} options={chartOptions} />;\n};\n","import React, { useEffect, useState } from \"react\";\nimport Highcharts from \"highcharts\";\nimport HighchartsReact from \"highcharts-react-official\";\nimport { useStateStats } from \"./StateChartWrapper\";\n\nconst highChartOptions = Highcharts.getOptions();\nconst color =\n  highChartOptions && Array.isArray(highChartOptions.colors)\n    ? highChartOptions.colors[0]\n    : \"rgb(255, 255, 255)\";\n\nconst options = {\n  chart: {\n    zoomType: \"x\",\n  },\n  xAxis: {\n    type: \"datetime\",\n  },\n  yAxis: {\n    title: {\n      text: \"Testing\",\n    },\n  },\n  legend: {\n    enabled: false,\n  },\n  plotOptions: {\n    area: {\n      fillColor: {\n        linearGradient: {\n          x1: 0,\n          y1: 0,\n          x2: 0,\n          y2: 1,\n        },\n        stops: [\n          [0, color],\n          [1, Highcharts.color(color).setOpacity(0).get(\"rgba\")],\n        ],\n      },\n      marker: {\n        radius: 2,\n      },\n      lineWidth: 1,\n      states: {\n        hover: {\n          lineWidth: 1,\n        },\n      },\n      threshold: null,\n    },\n  },\n  tooltip: {\n    pointFormat: \"{series.name}: <b>{point.y:,.0f}</b>\",\n  },\n  series: [\n    {\n      name: \"deaths\",\n      type: \"area\",\n      data: [] as any,\n    },\n  ],\n};\n\nexport const StateTestChart = (props: { state: string }) => {\n  const [states] = useStateStats();\n  const [chartOptions, setChartOptions] = useState(options);\n\n  useEffect(() => {\n    if (states) {\n      const newOptions = { ...chartOptions, title: { text: props.state } };\n      console.log(\"states\", states);\n      let filtered = states\n        .filter((s) => s.state === props.state)\n        .sort((a, b) => a.datetime - b.datetime);\n\n      let totalTestResults = filtered.map((f) => {\n        return [f.datetime, f.totalTestResults || 0];\n      });\n\n      let totalNegativeTestResultsData = filtered.map((f) => {\n        return [f.datetime, f.negative || 0];\n      });\n\n      let totalPositiveTestResultsData = filtered.map((f) => {\n        return [f.datetime, f.positive || 0];\n      });\n\n      console.log(\"stateData\");\n\n      newOptions.series = [\n        {\n          name: \"Total Test Results\",\n          type: \"area\",\n          data: totalTestResults,\n        },\n        {\n          name: \"Negative Test Results\",\n          type: \"area\",\n          data: totalNegativeTestResultsData,\n        },\n        {\n          name: \"Positive Test Results\",\n          type: \"area\",\n          data: totalPositiveTestResultsData,\n        },\n      ];\n\n      if (props.state === \"KS\") {\n        console.log(filtered);\n      }\n\n      setChartOptions(newOptions);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [states]);\n\n  return <HighchartsReact highcharts={Highcharts} options={chartOptions} />;\n};\n","export const stateAbbreviations = {\n  AL: \"Alabama\",\n  AK: \"Alaska\",\n  AS: \"American Samoa\",\n  AZ: \"Arizona\",\n  AR: \"Arkansas\",\n  CA: \"California\",\n  CO: \"Colorado\",\n  CT: \"Connecticut\",\n  DE: \"Delaware\",\n  DC: \"District Of Columbia\",\n  FM: \"Federated States Of Micronesia\",\n  FL: \"Florida\",\n  GA: \"Georgia\",\n  GU: \"Guam\",\n  HI: \"Hawaii\",\n  ID: \"Idaho\",\n  IL: \"Illinois\",\n  IN: \"Indiana\",\n  IA: \"Iowa\",\n  KS: \"Kansas\",\n  KY: \"Kentucky\",\n  LA: \"Louisiana\",\n  ME: \"Maine\",\n  MH: \"Marshall Islands\",\n  MD: \"Maryland\",\n  MA: \"Massachusetts\",\n  MI: \"Michigan\",\n  MN: \"Minnesota\",\n  MS: \"Mississippi\",\n  MO: \"Missouri\",\n  MT: \"Montana\",\n  NE: \"Nebraska\",\n  NV: \"Nevada\",\n  NH: \"New Hampshire\",\n  NJ: \"New Jersey\",\n  NM: \"New Mexico\",\n  NY: \"New York\",\n  NC: \"North Carolina\",\n  ND: \"North Dakota\",\n  MP: \"Northern Mariana Islands\",\n  OH: \"Ohio\",\n  OK: \"Oklahoma\",\n  OR: \"Oregon\",\n  PW: \"Palau\",\n  PA: \"Pennsylvania\",\n  PR: \"Puerto Rico\",\n  RI: \"Rhode Island\",\n  SC: \"South Carolina\",\n  SD: \"South Dakota\",\n  TN: \"Tennessee\",\n  TX: \"Texas\",\n  UT: \"Utah\",\n  VT: \"Vermont\",\n  VI: \"Virgin Islands\",\n  VA: \"Virginia\",\n  WA: \"Washington\",\n  WV: \"West Virginia\",\n  WI: \"Wisconsin\",\n  WY: \"Wyoming\",\n};\n","import React from \"react\";\nimport { Box, Paper, Grid } from \"@material-ui/core\";\nimport { createGlobalState, useMount } from \"react-use\";\nimport { StateChart } from \"./StateChart\";\nimport { StateTestChart } from \"./StateTestChart\";\nimport { stateAbbreviations } from \"../models/stateAbbreviations\";\nimport data from \"../../data/historical-state-data.json\";\n\nexport interface State {\n  dataQualityGrade: string;\n  date: string;\n  dateChecked: string;\n  datetime: number;\n  death: number;\n  deathIncrease: number;\n  fips: string;\n  hash: string;\n  hospitalized: null;\n  hospitalizedCumulative: null;\n  hospitalizedCurrently: number;\n  hospitalizedIncrease: number;\n  inIcuCumulative: null;\n  inIcuCurrently: number;\n  lastUpdateEt: string;\n  negative: number;\n  negativeIncrease: number;\n  onVentilatorCumulative: null;\n  onVentilatorCurrently: null;\n  pending: null;\n  posNeg: number;\n  positive: number;\n  positiveIncrease: number;\n  recovered: null;\n  state: string;\n  total: number;\n  totalTestResults: number;\n  totalTestResultsIncrease: number;\n}\n\nexport const useStateStats = createGlobalState<State[]>();\n\nexport const StateChartWrapper = () => {\n  const [, setStateStats] = useStateStats();\n\n  useMount(() => {\n    let stateData = data.map((value) => {\n      let dateStr = value.date.toString();\n\n      let newDate = new Date(\n        dateStr.slice(0, 4) +\n          \"/\" +\n          dateStr.slice(4, dateStr.length - 2) +\n          \"/\" +\n          dateStr.slice(6, dateStr.length)\n      );\n\n      return {\n        datetime: newDate.getTime(),\n        date: newDate.toDateString(),\n        ...value,\n      };\n    });\n    setStateStats(stateData);\n  });\n\n  return (\n    <Box display=\"flex\" pr={2}>\n      <Grid container spacing={3}>\n        {Object.keys(stateAbbreviations).map((key) => (\n          <Grid item xs={12} sm={6}>\n            <Paper elevation={3}>\n              <StateChart state={key} />\n            </Paper>\n            <Paper elevation={3}>\n              <StateTestChart state={key} />\n            </Paper>\n          </Grid>\n        ))}\n      </Grid>\n    </Box>\n  );\n};\n","import React, { useEffect, useState } from \"react\";\nimport * as Highcharts from \"highcharts\";\nimport HighchartsReact from \"highcharts-react-official\";\nimport { byCountryTotalAllStatus } from \"../../utils/covidApi\";\nimport { useCountryStats } from \"../../App\";\nimport { timeline } from \"../models/timeline\";\n\nimport AnnotationsModule from \"highcharts/modules/annotations\";\nAnnotationsModule(Highcharts);\n\nconst highChartOptions = Highcharts.getOptions();\nconst color =\n  highChartOptions && Array.isArray(highChartOptions.colors)\n    ? highChartOptions.colors[0]\n    : \"rgb(255, 255, 255)\";\n\nconst options = {\n  title: {\n    text: \"US Deaths by Day\",\n  },\n  chart: {\n    zoomType: \"x\",\n  },\n  xAxis: {\n    type: \"datetime\",\n  },\n  yAxis: {\n    title: {\n      text: \"Deaths\",\n    },\n    min: 0,\n  },\n  legend: {\n    enabled: false,\n  },\n\n  annotations: [\n    {\n      // labelOptions: {\n      //   backgroundColor: \"rgba(255,255,255,0.5)\",\n      //   verticalAlign: \"top\",\n      //   y: -40,\n      // },\n      labels: [] as any,\n    },\n  ],\n  plotOptions: {\n    area: {\n      fillColor: {\n        linearGradient: {\n          x1: 0,\n          y1: 0,\n          x2: 0,\n          y2: 1,\n        },\n        stops: [\n          [0, color],\n          [1, Highcharts.color(color).setOpacity(0).get(\"rgba\")],\n        ],\n      },\n      marker: {\n        radius: 2,\n      },\n      lineWidth: 1,\n      states: {\n        hover: {\n          lineWidth: 1,\n        },\n      },\n      threshold: null,\n    },\n  },\n  series: [\n    {\n      name: \"deaths\",\n      type: \"area\",\n      data: [] as number[][],\n    },\n  ],\n};\n\nexport const BasicChart = () => {\n  const [value, setValue] = useCountryStats();\n  const [chartOptions, setChartOptions] = useState<any>(null);\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  useEffect(() => {\n    const fetchData = async () => {\n      const result = await byCountryTotalAllStatus();\n      setValue(result.data);\n    };\n\n    fetchData();\n  }, [setValue]);\n\n  useEffect(() => {\n    if (value) {\n      const newOptions = { ...options };\n      let series = value.map((f) => {\n        return [new Date(f.Date).getTime(), f.Deaths];\n      });\n\n      for (const point of series) {\n        let [datetime, deaths] = point;\n        if (timeline[datetime]) {\n          let label = {\n            point: {\n              xAxis: 0,\n              yAxis: 0,\n              x: datetime,\n              y: deaths,\n            },\n            text: timeline[datetime],\n          };\n          newOptions.annotations[0].labels.push(label);\n        }\n      }\n\n      newOptions.series = [\n        {\n          name: \"deaths\",\n          type: \"area\",\n          data: series,\n        },\n      ];\n\n      setChartOptions(newOptions);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [value]);\n\n  return (\n    <div>\n      {!chartOptions ? (\n        <div>blah</div>\n      ) : (\n        <HighchartsReact highcharts={Highcharts} options={chartOptions} />\n      )}\n    </div>\n  );\n};\n","import React from \"react\";\nimport { Box, Paper, Grid } from \"@material-ui/core\";\nimport { BasicChart } from \"./BasicChart\";\n\nexport const CountryChartWrapper = () => {\n  return (\n    <Box display=\"flex\" pb={2}>\n      <Grid container spacing={3}>\n        <Grid item xs={12}>\n          <Paper elevation={3}>\n            <BasicChart />\n          </Paper>\n        </Grid>\n      </Grid>\n    </Box>\n  );\n};\n","import React, { useEffect, useRef, useState } from \"react\";\nimport { Box, Grid } from \"@material-ui/core\";\nimport { createGlobalState } from \"react-use\";\nimport { HeaderCards } from \"./components/cards/HeaderCards\";\nimport { Timeline } from \"./components/Timeline/Timeline\";\nimport { StateChartWrapper } from \"./components/charts/StateChartWrapper\";\nimport { CountryChartWrapper } from \"./components/charts/CountryChartWrapper\";\n\ninterface ComprehensiveStats {\n  death: number;\n  hash: string;\n  hospitalized: number;\n  hospitalizedCumulative: number;\n  hospitalizedCurrently: number;\n  inIcuCumulative: number;\n  inIcuCurrently: number;\n  lastModified: string;\n  negative: number;\n  notes: string;\n  onVentilatorCumulative: number;\n  onVentilatorCurrently: number;\n  pending: number;\n  posNeg: number;\n  positive: number;\n  recovered: number;\n  total: number;\n  totalTestResults: number;\n}\n\ninterface CountryStats {\n  Active: number;\n  City: string;\n  CityCode: string;\n  Confirmed: number;\n  Country: string;\n  CountryCode: string;\n  Date: string;\n  Deaths: number;\n  Lat: string;\n  Lon: string;\n  Province: string;\n  Recovered: number;\n}\n\nexport const useCountryStats = createGlobalState<CountryStats[]>();\n\nfunction debounce(fn: Function, ms: number) {\n  let timer: any;\n  return (_: any) => {\n    clearTimeout(timer);\n    timer = setTimeout((_: any) => {\n      timer = null;\n      fn.apply(this, ...arguments);\n    }, ms);\n  };\n}\n\nfunction App() {\n  const [dimensions, setDimensions] = useState({\n    height: window.innerHeight - 250,\n    width: window.innerWidth,\n  });\n  const chartContainer = useRef(null);\n\n  useEffect(() => {\n    const debouncedHandleResize = debounce(function handleResize() {\n      setDimensions({\n        height: window.innerHeight - 250,\n        width: window.innerWidth,\n      });\n    }, 1000);\n\n    console.log(\"dimensions\", dimensions.height);\n\n    window.addEventListener(\"resize\", debouncedHandleResize);\n\n    return () => {\n      window.removeEventListener(\"resize\", debouncedHandleResize);\n    };\n  });\n\n  return (\n    <div className=\"App\">\n      <Box>\n        <Box pb={2}>\n          <HeaderCards />\n        </Box>\n        <Box display=\"flex\">\n          <Grid container spacing={3}>\n            <Grid item xs={3}>\n              <Box width=\"20vw\" height={dimensions.height} overflow=\"auto\">\n                <Timeline align=\"left\" />\n              </Box>\n            </Grid>\n            <Grid item xs={9} id=\"chart-container\" ref={chartContainer}>\n              <Box display=\"flex\" flexDirection=\"column\" flexGrow={1}>\n                <CountryChartWrapper />\n                <StateChartWrapper />\n              </Box>\n            </Grid>\n          </Grid>\n        </Box>\n      </Box>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Timeline_container__1Ke5Y\",\"datetime\":\"Timeline_datetime__gO-uZ\",\"value\":\"Timeline_value__16gvU\"};"],"sourceRoot":""}