{"ast":null,"code":"var _jsxFileName = \"/Users/westegaards/workspace/covid/frontend/src/components/charts/StateChartWrapper.tsx\";\nimport React from \"react\";\nimport { Box, Paper, Grid } from \"@material-ui/core\";\nimport { createGlobalState, useMount } from \"react-use\";\nimport { StateChart } from \"./StateChart\";\nimport { StateTestChart } from \"./StateTestChart\";\nimport data from \"../../data/historical-state-data.json\";\nexport const useStateStats = createGlobalState();\nexport const StateChartWrapper = () => {\n  const [states, setStateStats] = useStateStats();\n  useMount(() => {\n    let stateData = data.map(value => {\n      let dateStr = value.date.toString();\n      let newDate = new Date(dateStr.slice(0, 4) + \"/\" + dateStr.slice(4, dateStr.length - 2) + \"/\" + dateStr.slice(6, dateStr.length));\n      return {\n        datetime: newDate.getTime(),\n        date: newDate.toDateString(),\n        ...value\n      };\n    }); // setData(californiaData);\n\n    setStateStats(stateData);\n  });\n  return /*#__PURE__*/React.createElement(Box, {\n    display: \"flex\",\n    pr: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    elevation: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(StateChart, {\n    state: \"CA\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Paper, {\n    elevation: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(StateTestChart, {\n    state: \"CA\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    elevation: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(StateChart, {\n    state: \"KS\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  })))));\n};","map":{"version":3,"sources":["/Users/westegaards/workspace/covid/frontend/src/components/charts/StateChartWrapper.tsx"],"names":["React","Box","Paper","Grid","createGlobalState","useMount","StateChart","StateTestChart","data","useStateStats","StateChartWrapper","states","setStateStats","stateData","map","value","dateStr","date","toString","newDate","Date","slice","length","datetime","getTime","toDateString"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,EAAcC,KAAd,EAAqBC,IAArB,QAAiC,mBAAjC;AACA,SAASC,iBAAT,EAA4BC,QAA5B,QAA4C,WAA5C;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,SAASC,cAAT,QAA+B,kBAA/B;AACA,OAAOC,IAAP,MAAiB,uCAAjB;AAiCA,OAAO,MAAMC,aAAa,GAAGL,iBAAiB,EAAvC;AAEP,OAAO,MAAMM,iBAAiB,GAAG,MAAM;AACrC,QAAM,CAACC,MAAD,EAASC,aAAT,IAA0BH,aAAa,EAA7C;AAEAJ,EAAAA,QAAQ,CAAC,MAAM;AACb,QAAIQ,SAAS,GAAGL,IAAI,CAACM,GAAL,CAAUC,KAAD,IAAW;AAClC,UAAIC,OAAO,GAAGD,KAAK,CAACE,IAAN,CAAWC,QAAX,EAAd;AAEA,UAAIC,OAAO,GAAG,IAAIC,IAAJ,CACZJ,OAAO,CAACK,KAAR,CAAc,CAAd,EAAiB,CAAjB,IACE,GADF,GAEEL,OAAO,CAACK,KAAR,CAAc,CAAd,EAAiBL,OAAO,CAACM,MAAR,GAAiB,CAAlC,CAFF,GAGE,GAHF,GAIEN,OAAO,CAACK,KAAR,CAAc,CAAd,EAAiBL,OAAO,CAACM,MAAzB,CALU,CAAd;AAQA,aAAO;AACLC,QAAAA,QAAQ,EAAEJ,OAAO,CAACK,OAAR,EADL;AAELP,QAAAA,IAAI,EAAEE,OAAO,CAACM,YAAR,EAFD;AAGL,WAAGV;AAHE,OAAP;AAKD,KAhBe,CAAhB,CADa,CAkBb;;AACAH,IAAAA,aAAa,CAACC,SAAD,CAAb;AACD,GApBO,CAAR;AAsBA,sBACE,oBAAC,GAAD;AAAK,IAAA,OAAO,EAAC,MAAb;AAAoB,IAAA,EAAE,EAAE,CAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,OAAO,EAAE,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,EAAf;AAAmB,IAAA,EAAE,EAAE,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAO,IAAA,SAAS,EAAE,CAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAC,IAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,eAIE,oBAAC,KAAD;AAAO,IAAA,SAAS,EAAE,CAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,cAAD;AAAgB,IAAA,KAAK,EAAC,IAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAJF,CADF,eASE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,EAAf;AAAmB,IAAA,EAAE,EAAE,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAO,IAAA,SAAS,EAAE,CAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAC,IAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CATF,CADF,CADF;AAmBD,CA5CM","sourcesContent":["import React from \"react\";\nimport { Box, Paper, Grid } from \"@material-ui/core\";\nimport { createGlobalState, useMount } from \"react-use\";\nimport { StateChart } from \"./StateChart\";\nimport { StateTestChart } from \"./StateTestChart\";\nimport data from \"../../data/historical-state-data.json\";\n\nexport interface State {\n  dataQualityGrade: string;\n  date: string;\n  dateChecked: string;\n  datetime: number;\n  death: number;\n  deathIncrease: number;\n  fips: string;\n  hash: string;\n  hospitalized: null;\n  hospitalizedCumulative: null;\n  hospitalizedCurrently: number;\n  hospitalizedIncrease: number;\n  inIcuCumulative: null;\n  inIcuCurrently: number;\n  lastUpdateEt: string;\n  negative: number;\n  negativeIncrease: number;\n  onVentilatorCumulative: null;\n  onVentilatorCurrently: null;\n  pending: null;\n  posNeg: number;\n  positive: number;\n  positiveIncrease: number;\n  recovered: null;\n  state: string;\n  total: number;\n  totalTestResults: number;\n  totalTestResultsIncrease: number;\n}\n\nexport const useStateStats = createGlobalState<State[]>();\n\nexport const StateChartWrapper = () => {\n  const [states, setStateStats] = useStateStats();\n\n  useMount(() => {\n    let stateData = data.map((value) => {\n      let dateStr = value.date.toString();\n\n      let newDate = new Date(\n        dateStr.slice(0, 4) +\n          \"/\" +\n          dateStr.slice(4, dateStr.length - 2) +\n          \"/\" +\n          dateStr.slice(6, dateStr.length)\n      );\n\n      return {\n        datetime: newDate.getTime(),\n        date: newDate.toDateString(),\n        ...value,\n      };\n    });\n    // setData(californiaData);\n    setStateStats(stateData);\n  });\n\n  return (\n    <Box display=\"flex\" pr={2}>\n      <Grid container spacing={3}>\n        <Grid item xs={12} sm={6}>\n          <Paper elevation={3}>\n            <StateChart state=\"CA\" />\n          </Paper>\n          <Paper elevation={3}>\n            <StateTestChart state=\"CA\" />\n          </Paper>\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <Paper elevation={3}>\n            <StateChart state=\"KS\" />\n          </Paper>\n        </Grid>\n      </Grid>\n    </Box>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}